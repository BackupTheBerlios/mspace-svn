<Type Name="NotificationFactory" FullName="Chicken.Gnome.Notification.NotificationFactory">
  <TypeSignature Language="C#" Value="public class NotificationFactory" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>Chicken</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Static factory methods to show notification messages rendered from different sources.</summary>
    <remarks>
      <para>
Three different methods are provided to render an notification message from different content. See <see cref="T:Chicken.Gnome.Notification.NotificationContent" />.</para>
      <list type="bullet">
        <item>
          <term>
            <see cref="M:Chicken.Gnome.Notification.NotificationFactory.ShowMessageNotification" /> will render a standard notification message included in the framework assembly.</term>
        </item>
        <item>
          <term>
            <see cref="M:Chicken.Gnome.Notification.NotificationFactory.ShowHtmlNotification" /> will render a standard notification message from a file, a URL or a text chunk.
</term>
        </item>
        <item>
          <term>
            <para>
              <see cref="M:Chicken.Gnome.Notification.NotificationFactory.ShowSvgNotification" /> will render an Svg message from a file or an Svg chunk.
</para>
          </term>
        </item>
      </list>
      <para />
      <example>
        <code lang="C#">
using Chicken.Gnome.Notification;
using Gtk;

public class SimpleMessageTest
{
    public static void Main (string[] args)
    {
        Application.Init ();
        NotificationFactory.ShowMessageNotification ("Notification header", "Notificaiton body", NotificationType.Info);
        Application.Run ();
    }

}
  </code>
      </example>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes />
  <Members>
    <Member MemberName="ShowHtmlNotification" Deprecated="true">
      <MemberSignature Language="C#" Value="public static void ShowHtmlNotification (string source, Chicken.Gnome.Notification.NotificationSource nsource, int width, int height, int timeout, Chicken.Gnome.Notification.TimerEndHandler thandler);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="nsource" Type="Chicken.Gnome.Notification.NotificationSource" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="thandler" Type="Chicken.Gnome.Notification.TimerEndHandler" />
      </Parameters>
      <Docs>
        <summary>
          <para>
Render a HTML notification message from a file, a URL or a text chunk.
</para>
        </summary>
        <param name="source">Can be a file, a URL or a HTML chunk. See <see cref="T:Chicken.Gnome.Notification.NotificationSource" />.</param>
        <param name="nsource">The source type of the notification.</param>
        <param name="width">The notification bubble width.</param>
        <param name="height">The notification bubble height.</param>
        <param name="timeout">The notification timeout in milliseconds. After this time, the notification disappears.</param>
        <remarks>To be added</remarks>
        <param name="thandler">
          <para>
Handler called when the timeout of the notification area message expires. It can be null if there is no interest in handling this event.
</para>
        </param>
      </Docs>
    </Member>
    <Member MemberName="ShowSvgNotification" Deprecated="true">
      <MemberSignature Language="C#" Value="public static void ShowSvgNotification (string source, string header, string body, int width, int height, int timeout, Chicken.Gnome.Notification.TimerEndHandler thandler);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="header" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="thandler" Type="Chicken.Gnome.Notification.TimerEndHandler" />
      </Parameters>
      <Docs>
        <summary>Render a Svg as a notification bubble from a file, or a text chunk.</summary>
        <param name="source">The source of the notification. See <see cref="T:Chicken.Gnome.Notification.NotificationSource" />. Note that an svg cannot be rendered from a Url at the moment.</param>
        <param name="header">The header text of the notification. It should be a short description of the message.</param>
        <param name="body">The type of the notification. See <see cref="T:Chicken.Gnome.Notification.NotificationType" />.</param>
        <param name="width">The notification bubble width.</param>
        <param name="height">The notification bubble height.</param>
        <param name="timeout">The notification timeout in milliseconds. After this time, the notification disappears.</param>
        <param name="thandler">Handler called when the timeout of the notification area message expires. It can be null if there is no interest in handling this event.</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMessageNotification" Deprecated="true">
      <MemberSignature Language="C#" Value="public static void ShowMessageNotification (string header, string body, int timeout, int width, int height, Chicken.Gnome.Notification.NotificationType type, Chicken.Gnome.Notification.TimerEndHandler thandler);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="type" Type="Chicken.Gnome.Notification.NotificationType" />
        <Parameter Name="thandler" Type="Chicken.Gnome.Notification.TimerEndHandler" />
      </Parameters>
      <Docs>
        <summary>Shows a standard warning, info or error notification.</summary>
        <param name="header">The header text of the notification. It should be a short description of the message.</param>
        <param name="body">The body of the notification message.</param>
        <param name="timeout">The notification timeout in milliseconds. After this time, the notification disappears.</param>
        <param name="width">The notification bubble width.</param>
        <param name="height">The notification bubble height.</param>
        <param name="type">The type of the notification. See <see cref="T:Chicken.Gnome.Notification.NotificationType" />.</param>
        <param name="thandler">Handler called when the timeout of the notification area message expires. It can be null if there is no interest in handling this event.</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMessageNotification" Deprecated="true">
      <MemberSignature Language="C#" Value="public static void ShowMessageNotification (string header, string body, Chicken.Gnome.Notification.NotificationType type, Chicken.Gnome.Notification.TimerEndHandler thandler);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
        <Parameter Name="type" Type="Chicken.Gnome.Notification.NotificationType" />
        <Parameter Name="thandler" Type="Chicken.Gnome.Notification.TimerEndHandler" />
      </Parameters>
      <Docs>
        <summary>Shows a standard warning, info or error notification with the default width, height and timeout.</summary>
        <param name="header">The header text of the notification. It should be a short description of the message.</param>
        <param name="body">The body of the notification message.</param>
        <param name="type">The type of the notification. See <see cref="T:Chicken.Gnome.Notification.NotificationType" />.</param>
        <param name="thandler">Handler called when the timeout of the notification area message expires. It can be null if there is no interest in handling this event.</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowHtmlNotification">
      <MemberSignature Language="C#" Value="public static void ShowHtmlNotification (string source, Chicken.Gnome.Notification.NotificationSource nsource, int width, int height, int timeout, Chicken.Gnome.Notification.TimerEndedHandler thandler);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="nsource" Type="Chicken.Gnome.Notification.NotificationSource" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="thandler" Type="Chicken.Gnome.Notification.TimerEndedHandler" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="source">a <see cref="T:System.String" /></param>
        <param name="nsource">a <see cref="T:System.Int32" /></param>
        <param name="width">a <see cref="T:System.Int32" /></param>
        <param name="height">a <see cref="T:System.Int32" /></param>
        <param name="timeout">a <see cref="T:System.Int32" /></param>
        <param name="thandler">a <see cref="T:Chicken.Gnome.Notification.TimerEndedHandler" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSvgNotification">
      <MemberSignature Language="C#" Value="public static void ShowSvgNotification (string source, string header, string body, int width, int height, int timeout, Chicken.Gnome.Notification.TimerEndedHandler thandler);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="header" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="thandler" Type="Chicken.Gnome.Notification.TimerEndedHandler" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="source">a <see cref="T:System.String" /></param>
        <param name="header">a <see cref="T:System.String" /></param>
        <param name="body">a <see cref="T:System.String" /></param>
        <param name="width">a <see cref="T:System.Int32" /></param>
        <param name="height">a <see cref="T:System.Int32" /></param>
        <param name="timeout">a <see cref="T:System.Int32" /></param>
        <param name="thandler">a <see cref="T:Chicken.Gnome.Notification.TimerEndedHandler" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMessageNotification">
      <MemberSignature Language="C#" Value="public static void ShowMessageNotification (string header, string body, int timeout, int width, int height, Chicken.Gnome.Notification.NotificationType type, Chicken.Gnome.Notification.TimerEndedHandler thandler);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="type" Type="Chicken.Gnome.Notification.NotificationType" />
        <Parameter Name="thandler" Type="Chicken.Gnome.Notification.TimerEndedHandler" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="header">a <see cref="T:System.String" /></param>
        <param name="body">a <see cref="T:System.String" /></param>
        <param name="timeout">a <see cref="T:System.Int32" /></param>
        <param name="width">a <see cref="T:System.Int32" /></param>
        <param name="height">a <see cref="T:System.Int32" /></param>
        <param name="type">a <see cref="T:System.Int32" /></param>
        <param name="thandler">a <see cref="T:Chicken.Gnome.Notification.TimerEndedHandler" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMessageNotification">
      <MemberSignature Language="C#" Value="public static void ShowMessageNotification (string header, string body, Chicken.Gnome.Notification.NotificationType type, Chicken.Gnome.Notification.TimerEndedHandler thandler);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
        <Parameter Name="type" Type="Chicken.Gnome.Notification.NotificationType" />
        <Parameter Name="thandler" Type="Chicken.Gnome.Notification.TimerEndedHandler" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="header">a <see cref="T:System.String" /></param>
        <param name="body">a <see cref="T:System.String" /></param>
        <param name="type">a <see cref="T:System.Int32" /></param>
        <param name="thandler">a <see cref="T:Chicken.Gnome.Notification.TimerEndedHandler" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>