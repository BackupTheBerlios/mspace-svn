// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gksu.UI {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public  class SuDialog : Gtk.Dialog {

		~SuDialog()
		{
			Dispose();
		}

		[Obsolete]
		protected SuDialog(GLib.GType gtype) : base(gtype) {}
		public SuDialog(IntPtr raw) : base(raw) {}

		[DllImport("gksuui")]
		static extern IntPtr gksuui_dialog_new();

		public SuDialog () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (SuDialog)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			Raw = gksuui_dialog_new();
		}

		[DllImport("gksuui")]
		static extern IntPtr gksuui_dialog_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gksuui_dialog_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("gksuui")]
		static extern IntPtr gksuui_dialog_get_message(IntPtr raw);

		[DllImport("gksuui")]
		static extern void gksuui_dialog_set_message(IntPtr raw, IntPtr message);

		public string Message { 
			get {
				IntPtr raw_ret = gksuui_dialog_get_message(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
			set {
				gksuui_dialog_set_message(Handle, GLib.Marshaller.StringToPtrGStrdup(value));
			}
		}

		[DllImport("gksuui")]
		static extern IntPtr gksuui_dialog_get_password(IntPtr raw);

		public string Password { 
			get {
				IntPtr raw_ret = gksuui_dialog_get_password(Handle);
				string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
				return ret;
			}
		}

#endregion
	}
}
